#!/bin/bash

source ../../initialize_parameters.sh

EXPERIMENT_PATH=$PWD

source ${EXPERIMENT_PATH}/config.env

# Convert AMPLICONS into an array
IFS=',' read -r -a amplicon_array <<< "$AMPLICONS"

# Define a function to run DADA2 for each amplicon
run_dada2_for_amplicon() {
  local amplicon="$1"
  
  echo -e "\n${PURPLE}Performing DADA2 for ${amplicon} amplicon..."
  mkdir -p "$EXPERIMENT_PATH/${amplicon}/dada2_output"

  echo -e "\n${ORANGE}Before DADA2, visualize samples.qza (samples.qzv) to decide truncation lengths. Use the same trunc length for both forward and reverse reads across all runs for each amplicon.${NC}"
  
  # Open quality graphs for each file within the amplicon
  for file in "$EXPERIMENT_PATH/cutadapt"/*-"$amplicon"-*.qzv; do
    file_name=$(echo "$file" | sed "s|${EXPERIMENT_PATH}/cutadapt/||; s|\.qzv$||")
    echo -e "\n${PURPLE}Opening $file_name...${NC}"
    qiime tools view "$file"
  done

  # Get truncation lengths from user
  echo -e "\n${LIGHTCYAN}Enter truncating length for Forward sequences for Amplicon $amplicon:"
  read -r trunc_forward_byAmplicon
  echo -e "\n${LIGHTCYAN}Enter truncating length for Reverse sequences for Amplicon $amplicon:"
  read -r trunc_reverse_byAmplicon

  # Run DADA2 on each relevant file for this amplicon
  for file in "$EXPERIMENT_PATH/cutadapt"/*-"$amplicon"-*.qza; do
    file_name=$(echo "$file" | sed "s|${EXPERIMENT_PATH}/cutadapt/||; s|\.qza$||")
    echo -e "\n${PURPLE}Performing DADA2 denoise-paired for $file_name...${NC}"
    
    qiime dada2 denoise-paired \
      --i-demultiplexed-seqs "$file" \
      --p-trunc-len-f "${trunc_forward_byAmplicon}" \
      --p-trunc-len-r "${trunc_reverse_byAmplicon}" \
      --p-n-threads 4 \
      --o-representative-sequences "$EXPERIMENT_PATH/${amplicon}/dada2_output/${file_name}-rep-seqs-paired-trun${trunc_forward_byAmplicon}.qza" \
      --o-table "$EXPERIMENT_PATH/${amplicon}/dada2_output/${file_name}-table-paired-trun${trunc_forward_byAmplicon}.qza" \
      --o-denoising-stats "$EXPERIMENT_PATH/${amplicon}/dada2_output/${file_name}-stats-dada2-paired-trun${trunc_forward_byAmplicon}.qza" \
      --verbose

    # Visualize resulting metadata from DADA2
    qiime metadata tabulate \
      --m-input-file "$EXPERIMENT_PATH/${amplicon}/dada2_output/${file_name}-stats-dada2-paired-trun${trunc_forward_byAmplicon}.qza" \
      --o-visualization "$EXPERIMENT_PATH/${amplicon}/dada2_output/${file_name}-stats-dada2-paired-trun${trunc_forward_byAmplicon}.qzv"
  done

  # Review statistic tables and ask if re-run is needed
  echo -e "\n${ORANGE}Check DADA2 statistics tables to assess if truncation length is adequate (70% pass rate is good). Opening stats tables...${NC}"
  for file in "$EXPERIMENT_PATH/${amplicon}/dada2_output/"*-stats-dada2-*.qzv; do
    file_name=$(echo "$file" | sed "s|${EXPERIMENT_PATH}/${amplicon}/dada2_output/||; s|\.qzv$||")
    echo -e "\n${PURPLE}Opening $file_name...${NC}"
    qiime tools view "$file"
  done

  # Ask if DADA2 should be re-run with different parameters
  echo -e "\n${ORANGE}After viewing stats tables... ${LIGHTCYAN}Do you want to re-run DADA2 for amplicon ${amplicon}? (Yes or No)"
  read -r repeatDada2

  if [[ "$repeatDada2" == "Yes" ]]; then
    echo -e "\n${PURPLE}Re-running DADA2 for ${amplicon}..."
    rm -r "$EXPERIMENT_PATH/${amplicon}/dada2_output"
    run_dada2_for_amplicon "$amplicon"  # Recursive call for re-run
  elif [[ "$repeatDada2" == "No" ]]; then
    echo -e "\n${PURPLE}DADA2 FOR ${amplicon} AMPLICON COMPLETED!"
    # Log DADA2 parameters to config.env
    {
      echo "######### DADA2 ANALYSIS: #########"
      echo "# No trimming due to primer removal with cutadapt"
      echo "DADA2_TRUNC_${amplicon}_FORWARD=\"$trunc_forward_byAmplicon\""
      echo "DADA2_TRUNC_${amplicon}_REVERSE=\"$trunc_reverse_byAmplicon\""
    } >> config.env
  fi
}

# Loop through each amplicon and process with DADA2
for amplicon in "${amplicon_array[@]}"; do
  run_dada2_for_amplicon "$amplicon"
done


echo -e "\n${PURPLE}DADA2 COMPLETED!"
echo -e "\n${PURPLE}Continue to Taxonomic classification..."
bash $DIR/src/IL_Primers_Dada2_merge



