#!/bin/bash

source ../../initialize_parameters.sh

EXPERIMENT_PATH=$PWD

source ${EXPERIMENT_PATH}/config.env

# Convert REGIONS into an array
IFS=',' read -r -a regions_array <<< "$V_REGIONS"

# Define a function to run DADA2 for each V region
run_dada2_for_region() {
  local Vregion="$1"
  
  echo -e "\n${PURPLE}Performing DADA2 for V region ${Vregion}..."
  mkdir -p "$EXPERIMENT_PATH/cutprimers_qiime2/${Vregion}/dada2_output"

  # Prompt to visualize quality graphs for DADA2 parameters selection
  echo -e "\n${ORANGE}Before DADA2, visualize samples.qza (samples-demux.qzv) to decide the trunc length. For multiple runs, choose the trunc length based on all created .qzv samples.${NC}"
  
  # Visualize all quality graphs for a specific region
  for run in $(seq 1 "$SEQUENCING_RUNS"); do
    echo -e "\n${PURPLE}Opening visualization for run $run, V region ${Vregion}...${NC}"
    qiime tools view "$EXPERIMENT_PATH/cutprimers_output_sorted_run${run}/samples-run${run}-${Vregion}-demux.qzv"
  done

  # Ask for truncation length for this V region
  echo -e "\n${LIGHTCYAN}Enter truncation length for V region ${Vregion}:"
  read -r trunc_lenVal_byVregion

  # Perform DADA2 on each run within the region
  for run in $(seq 1 "$SEQUENCING_RUNS"); do
    echo -e "\n${PURPLE}Performing DADA2 for run $run, V region ${Vregion}...${NC}"
    qiime dada2 denoise-pyro \
      --i-demultiplexed-seqs "$EXPERIMENT_PATH/cutprimers_output_sorted_run${run}/samples-run${run}-${Vregion}.qza" \
      --p-trunc-len "${trunc_lenVal_byVregion}" \
      --p-n-threads 4 \
      --o-representative-sequences "$EXPERIMENT_PATH/cutprimers_qiime2/${Vregion}/dada2_output/samples-run${run}-${Vregion}-rep-seqs-pyro-trun${trunc_lenVal_byVregion}.qza" \
      --o-table "$EXPERIMENT_PATH/cutprimers_qiime2/${Vregion}/dada2_output/samples-run${run}-${Vregion}-table-pyro-trun${trunc_lenVal_byVregion}.qza" \
      --o-denoising-stats "$EXPERIMENT_PATH/cutprimers_qiime2/${Vregion}/dada2_output/samples-run${run}-${Vregion}-stats-dada2-pyro-trun${trunc_lenVal_byVregion}.qza" \
      --verbose

    # Visualize resulting DADA2 data
    qiime feature-table tabulate-seqs \
      --i-data "$EXPERIMENT_PATH/cutprimers_qiime2/${Vregion}/dada2_output/samples-run${run}-${Vregion}-rep-seqs-pyro-trun${trunc_lenVal_byVregion}.qza" \
      --o-visualization "$EXPERIMENT_PATH/cutprimers_qiime2/${Vregion}/dada2_output/samples-run${run}-${Vregion}-rep-seqs-pyro-trun${trunc_lenVal_byVregion}.qzv"

    qiime metadata tabulate \
      --m-input-file "$EXPERIMENT_PATH/cutprimers_qiime2/${Vregion}/dada2_output/samples-run${run}-${Vregion}-stats-dada2-pyro-trun${trunc_lenVal_byVregion}.qza" \
      --o-visualization "$EXPERIMENT_PATH/cutprimers_qiime2/${Vregion}/dada2_output/samples-run${run}-${Vregion}-stats-dada2-pyro-trun${trunc_lenVal_byVregion}.qzv"
  done

  # Visualize statistics and ask if DADA2 needs to be re-run
  echo -e "\n${ORANGE}Review DADA2 statistics to determine if truncation length is adequate (70% pass rate is acceptable). Opening stat tables...${NC}"
  for run in $(seq 1 "$SEQUENCING_RUNS"); do
    qiime tools view "$EXPERIMENT_PATH/cutprimers_qiime2/${Vregion}/dada2_output/samples-run${run}-${Vregion}-stats-dada2-pyro-trun${trunc_lenVal_byVregion}.qzv"
  done

  echo -e "\n${ORANGE}After viewing stats tables... ${LIGHTCYAN}Do you want to re-run DADA2 for V region ${Vregion}? (Yes or No)"
  read -r repeatDada2

  # If re-run is needed, delete and re-run only for the current region
  if [[ "$repeatDada2" == "Yes" ]]; then
    echo -e "\n${PURPLE}Re-running DADA2 for ${Vregion}..."
    rm -r "$EXPERIMENT_PATH/cutprimers_qiime2/${Vregion}/dada2_output"
    run_dada2_for_region "$Vregion"  # Recursively call function for this region
  elif [[ "$repeatDada2" == "No" ]]; then
    echo -e "\n${PURPLE}DADA2 for ${Vregion} completed!"
    # Save DADA2 parameters to config.env
    {
      echo "######### DADA2 ANALYSIS: #########"
      echo "# No trimming due to primer removal with cutadapt"
      echo "DADA2_TRUNC_${Vregion}=\"$trunc_lenVal_byVregion\""
    } >> config.env
  fi
}

# Loop over each region in regions_array and run DADA2 processing
for Vregion in "${regions_array[@]}"; do
  run_dada2_for_region "$Vregion"
done


echo -e "\n${PURPLE}Continue to Taxonomic classification..."
echo -e "\n${PURPLE}Merging dada2 outputs from different runs..."
bash $DIR/src/IT_MetagenomicsKit_Dada2_merge

