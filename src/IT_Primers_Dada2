#!/bin/bash

source ../../initialize_parameters.sh

EXPERIMENT_PATH=$PWD

source ${EXPERIMENT_PATH}/config.env

# Convert AMPLICONS into an array
IFS=',' read -r -a amplicon_array <<< "$AMPLICONS"


# Define la función para ejecutar DADA2 en un amplicón específico
run_dada2_for_amplicon() {
  local amplicon=$1
  echo -e "\n${PURPLE}Performing Dada2 for ${amplicon} amplicon..."
  mkdir -p $EXPERIMENT_PATH/${amplicon}/dada2_output

  echo -e "\n${ORANGE}Before DADA2 step, visualize samples.qza (through samples.qzv) and decide the length of reads for truncation by quality. Use the same trunc length in every run for each amplicon."
  
  # Identificar los archivos creados para este amplicón
  for file in "$EXPERIMENT_PATH/cutadapt"/*-$amplicon-*.qzv; do
    file_name=$(echo "$file" | sed "s|${EXPERIMENT_PATH}/cutadapt/||; s|\.qzv$||")
    echo -e "\n${PURPLE}Opening $file_name .. ${NC}"
    qiime tools view "$file"
  done

  # Pedir parámetros de truncado
  echo -e "\n${LIGHTCYAN} Enter truncating length for Amplicon $amplicon"
  read trunc_lenVal_byAmplicon

  for file in "$EXPERIMENT_PATH/cutadapt"/*-$amplicon-*.qza; do
    file_name=$(echo "$file" | sed "s|${EXPERIMENT_PATH}/cutadapt/||; s|\.qza$||")
    echo -e "\n${PURPLE}Performing Dada2 for $file_name...${NC}"

    qiime dada2 denoise-pyro \
      --i-demultiplexed-seqs "$file" \
      --p-trunc-len ${trunc_lenVal_byAmplicon} \
      --p-n-threads 4 \
      --o-representative-sequences "$EXPERIMENT_PATH/${amplicon}/dada2_output/${file_name}-rep-seqs-pyro-trun${trunc_lenVal_byAmplicon}.qza" \
      --o-table "$EXPERIMENT_PATH/${amplicon}/dada2_output/${file_name}-table-pyro-trun${trunc_lenVal_byAmplicon}.qza" \
      --o-denoising-stats "$EXPERIMENT_PATH/${amplicon}/dada2_output/${file_name}-stats-dada2-pyro-trun${trunc_lenVal_byAmplicon}.qza" \
      --verbose

    qiime metadata tabulate \
      --m-input-file "$EXPERIMENT_PATH/${amplicon}/dada2_output/${file_name}-stats-dada2-pyro-trun${trunc_lenVal_byAmplicon}.qza" \
      --o-visualization "$EXPERIMENT_PATH/${amplicon}/dada2_output/${file_name}-stats-dada2-pyro-trun${trunc_lenVal_byAmplicon}.qzv"
  done

  echo -e "\n${ORANGE}Sometimes the truncating length value may not be optimal. To verify, check the statistics table after DADA2. Ideally, 70% reads pass the filter. If not, re-run DADA2 with a different trunc length. Let's visualize each run's stats:${NC}"
  
  for file in "$EXPERIMENT_PATH/${amplicon}/dada2_output/"/*-stats-dada2-*.qzv; do
    file_name=$(echo "$file" | sed "s|${EXPERIMENT_PATH}/${amplicon}/dada2_output/||; s|\.qzv$||")
    echo -e "\n${PURPLE}Visualizing $file_name...${NC}"
    qiime tools view "$file"
  done

  echo -e "\n${ORANGE}Once all stats tables are visualized... ${LIGHTCYAN} Do you want to re-run DADA2 for amplicon ${amplicon}? (Yes or No)"
  read repeatDada2

  if [[ $repeatDada2 == "Yes" ]]; then
    echo -e "\n${PURPLE}Running DADA2 again for ${amplicon}..."
    rm -r "$EXPERIMENT_PATH/${amplicon}/dada2_output"
    run_dada2_for_amplicon "$amplicon"  # Ejecuta la función solo para este amplicón actual

  elif [[ $repeatDada2 == "No" ]]; then
    echo -e "\n${PURPLE}DADA2 FOR ${amplicon} AMPLICON COMPLETED!"
    # Guardar parámetros de Dada2 en config.env
    {
      echo "######### DADA2 ANALYSIS: #########"
      echo "# Since cutadapt was used for primer removal, no trimming is used"
      echo "DADA2_TRUNC_${amplicon}=\"$trunc_lenVal_byAmplicon\""
    } >> config.env
  fi
}

# Iterar sobre cada amplicón usando la función
for amplicon in "${amplicon_array[@]}"; do
  run_dada2_for_amplicon "$amplicon"  # Llamar a la función para cada amplicón
done


echo -e "\n${PURPLE}DADA2 COMPLETED!"
echo -e "\n${PURPLE}Continue to Taxonomic classification..."
bash $DIR/src/IT_Primers_Dada2_merge

