#!/bin/bash

source ../../initialize_parameters.sh

EXPERIMENT_PATH=$PWD

echo -e "${LIGHTCYAN}Please, enter again the amplicon name(s) used (ex: V3 / amp1 / V3,V4)"
read ampliconNames
array_amplicons=($(echo $ampliconNames | tr "," "\n"))

# visualize quality graph of each .qzv created in cutadapt
for amplicon in "${array_amplicons[@]}"; do
  mkdir -p $EXPERIMENT_PATH/${amplicon}/dada2_output

  echo -e "${ORANGE}Before DADA2 step, you need to visualize samples.qza (through samples.qzv) and decide the length of reads, so we can trunc by quality. Remember that you must use the same trunc length in every run by amplicon."
  # Identifying all the files created for a specific amplicon, we can analyze all the runs for a specific region: 
  for file in "$EXPERIMENT_PATH/cutadapt"/*-$amplicon-*.qzv; do
    file_name=$(echo "$file" | sed "s|${EXPERIMENT_PATH}/cutadapt/||; s|\.qzv$||")
    echo -e "${PURPLE}Opening $file_name .. ${NC}"
    qiime tools view $file
  done

  # Ask for truncating and trimming parameters:
  echo -e "${LIGHTCYAN} Enter truncating length for Amplicon $amplicon"
  read trunc_lenVal_byAmplicon

  for file in "$EXPERIMENT_PATH/cutadapt"/*-$amplicon-*.qza; do
    file_name=$(echo "$file" | sed "s|${EXPERIMENT_PATH}/cutadapt/||; s|\.qza$||")
    echo -e "\n${PURPLE}Performing Dada2 for $file_name...${NC}"

    qiime dada2 denoise-pyro \
      --i-demultiplexed-seqs $file \
      --p-trunc-len ${trunc_lenVal_byAmplicon} \
      --p-n-threads 4 \
      --o-representative-sequences $EXPERIMENT_PATH/${amplicon}/dada2_output/${file_name}-rep-seqs-pyro-trun${trunc_lenVal_byAmplicon}.qza \
      --o-table $EXPERIMENT_PATH/${amplicon}/dada2_output/${file_name}-table-pyro-trun${trunc_lenVal_byAmplicon}.qza \
      --o-denoising-stats $EXPERIMENT_PATH/${amplicon}/dada2_output/${file_name}-stats-dada2-pyro-trun${trunc_lenVal_byAmplicon}.qza \
      --verbose
      # Since the Cutadapt has been used for removing primers, no trimming will be used. 

      #Visualizing Resulting data...
      #Converting DADA2 artifact .qza to .qzv
      # qiime feature-table summarize \
      # --i-table $EXPERIMENT_PATH/cutprimers_output_sorted_run${run}/Dada2_output/samples-run${run}-${Vregion}-table-pyro.qza \
      # --o-visualization $EXPERIMENT_PATH/cutprimers_output_sorted_run${run}/Dada2_output/samples-run${run}-${Vregion}-table-pyro.qzv \
      # --m-sample-metadata-file ${CURRENT_DIR}/samples-metadata-run${run}.tsv

      # qiime feature-table tabulate-seqs \
      # --i-data $EXPERIMENT_PATH/${amplicon}/dada2_output/samples-run${run}-${Vregion}-rep-seqs-pyro-trun${trunc_lenVal_byVregion}.qza \
      # --o-visualization $EXPERIMENT_PATH/${amplicon}/dada2_output/samples-run${run}-${Vregion}-rep-seqs-pyro-trun${trunc_lenVal_byVregion}.qzv

    qiime metadata tabulate \
            --m-input-file $EXPERIMENT_PATH/${amplicon}/dada2_output/${file_name}-stats-dada2-pyro-trun${trunc_lenVal_byAmplicon}.qza \
            --o-visualization $EXPERIMENT_PATH/${amplicon}/dada2_output/${file_name}-stats-dada2-pyro-trun${trunc_lenVal_byAmplicon}.qzv
  done

  echo -e "${ORANGE}Sometimes the truncating length value we choose may not be optimal. To be able to assess whether we should choose another value, we must view the statistics table that is created after the Dada2 step. To know if the chosen value is good, we must look at the percentage of reads that pass the filter. For example, 70% would not be bad. However, we can re-run the Dada2 step with another value to compare the percentages. Let's visualize the statistic tables of each run run:${NC}"

  # Visualize statistic.qzv to know if the Dada2 parameters were the correct ones
  for file in "$EXPERIMENT_PATH/${amplicon}/dada2_output/"/*-stats-dada2-*.qzv; do
      file_name=$(echo "$file" | sed "s|${EXPERIMENT_PATH}/${amplicon}/dada2_output/||; s|\.qzv$||")
      echo -e "\n${PURPLE}Visualizing $file_name...${NC}"
      qiime tools view $file
  done

  echo -e "${ORANGE}Once you have vizualize all the statistic tables... ${LIGHTCYAN} Do you want to re-run dada2 for amplicon ${amplicon}? (Write Yes or No)"
  read repeatDada2
  # Decide if Dada2 needs to be re-run
  if test ${repeatDada2} == "Yes"; then
      echo -e "${PURPLE}Running DADA2 again..."
      # For this version all the previous dada2 outputs need to be removed, later on this will be optimized!!
      rm -r $EXPERIMENT_PATH/${amplicon}/dada2_output
      bash $DIR/src/IT_Primers_Dada2

  elif test ${repeatDada2} == "No"; then
      echo -e "${PURPLE}Continue to Taxonomic classification..."
      echo -e "${PURPLE}Merging dada2 outputs from different runs..."
      bash $DIR/src/IT_Primers_Dada2_merge
  fi
done


